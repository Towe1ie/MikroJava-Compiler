string _addStrings(string str1, string str2)
	int len1, len2, totalLen, i;
	string newStr;
{
	len1 = len(str1);
	len2 = len(str2);
	totalLen = len1 + len2 - 1;
	newStr = new char[totalLen];
	i = 0;
	while (i < len1 - 1 && ord(str1[i]) != 0)
	{
		newStr[i] = str1[i];
		i++;
	}
	
	len1 = i + 1;
	i = 0;
	while (i < len2 - 1 && ord(str2[i]) != 0)
	{
		
		newStr[i + len1 -1] = str2[i];
		i++;
	}
	return newStr;
}

bool _stringEquals(string str1, string str2)
	int len1, len2, i;
	bool ret;
{
	len1 = len(str1);
	len2 = len(str2);
	if (len1 != len2)
		return false;
	ret = true;
	i = 0;
	while (i < len1 - 1)
	{
		if (str1[i] != str2[i])
		{
			ret = false;
			break;
		}
		i++;
	}

	return ret;
}

string _readString()
	int i, j, size;
	string ret;
	char c;
{
	size = 20;
	ret = new char[size];
	
	read(c);
	i = 0;
	while(ord(c) != 13)
	{
		ret[i] = c;
		i++;
		read(c);
	}
	ret[i] = chr(0);
	
	return ret;
}

void _printString(string str)
	int i, strlen;
{
	strlen = len(str);
	while(i < strlen-1 && ord(str[i]) != 0)
	{
		print(str[i]);
		i++;
	}
}